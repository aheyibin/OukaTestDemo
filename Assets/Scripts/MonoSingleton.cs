using UnityEngine;public abstract class MonoSingleton<T> : MonoBehaviour where T : MonoBehaviour{    public bool global = true;    private static T _instance;    public static T Instance    {        get        {            if (_instance == null)            {                _instance = (T)FindObjectOfType<T>();            }            return _instance;        }    }    void Awake()    {        if (global)        {            if (_instance != null && _instance != this.gameObject.GetComponent<T>())            {                Destroy(this.gameObject);                return;            }            DontDestroyOnLoad(this.gameObject);            _instance = this.gameObject.GetComponent<T>();        }        this.OnStart();    }    protected virtual void OnStart()    {    }}